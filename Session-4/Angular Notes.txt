install node js from link:
https://nodejs.org/en/download/
--------------------------------------------------
step: 1
--------------------------------------------------

1. to check the version of node

>open cmd> node -v
	output: v16.14.2
2. NPM manager- node package manager
----provides the bundles of packages which we can download directly using CMD
----ex. angular,react,view JS,typescript,bootstrap
----NPM installed automatocally whenever you Install node js in your system
----to check the version of NPM

>npm -v 
	output: 8.5.0


-------------------------------------------------------

step2: INSTALLING TYPESCRIPT

-------------------------------------------------------

> npm install typescript -g

to check the version

>tsc -v
	output: version 4.6.3


----prepare one first.ts file in visual studio code  as below-------

first.ts
-----------------------------------------------------------------------
let a:number;
a=56;

let b:number=12;

let fname:string="Nikunj";

console.log(a+b);

console.log(fname);


function test(num1:number,num2:number):number
{
    return num1+num2;
}

console.log(test(2,3));

-------------------------------------------------------------------------

goto terminal>new terminal>open cmd

>tsc first.ts

you will see that a new file named as 'first.js' is automatically prepared in the folder

>node first.js

you will see out put in console


preparing 'tsconfig.json' file : it is a file to configure json file

how .ts converts .js we can configure in this file

>tsc --init (will create tsconfig.json file and we can check the same)


-----------------------------------------------------------------------------
step:3 INSTALLING ANGULAR ON YOUR MACHINE
-----------------------------------------------------------------------------

let's install angular

>npm install -g @angular/cli (or  npm i -g @angular/cli)


to check the version

>ng --version


let's create angular project
***************************************

ng new myapp (you can give name)

	it will ask you two questions
	1. do you want to add angular routing? :Y
	2. Choose CSS:CSS

once the myapp  is created change the directory using command prompt
>cd myapp

to start your angular app
> ng serve 



once the app started go to the browser : localhost:4200 and hit enter

goto app>app.component.html file and edit the code whichever you like to do

<h1>My First Angular App</h1>

save it > so it will be automatically updated in browser ,that you can check in the browser

*****************************************************************************
STEP:4 PREPARE ANGULAR COMPONENT
*****************************************************************************

NOTE: add another cmd from terminal move to the root directory and execute the below code

>ng generate component header (OR ng g c header)   /// where header is name


goto >src>app >header >header.component.html and prepare the header you want


<h1> Header Works!</h1>


goto> src>app>header>header.conponent.css and add a style

h1{
	background-color: antiquewhite;
}


goto> header.component.ts and copy the selector name which is present inside 
@component{

} 

goto> app.component.html

write 

<app-header></app-header>

save it and you will be able to see the out put in browser


similarly you can generate footer component and integrate in app using the above steps


----------------------------------------------------------------------------
step:5 DATA BINDING
----------------------------------------------------------------------------

types:
1. source to view (.ts to .html)
2. view to source (.html to .ts)
3. source-to-view-to-source (two way binding)



data binding can be done in two ways
	1. Interpolation Binding {{}}
	2. Property Binding[]


let's prepare binding component from node js ny following command

> ng g c binding   ///binding is a name of component 



to bind the data go to binding.component.ts----and add following at the bottom


	 name:string="Nikunj Soni";
  	 url:string="https://www.google.com";

goto> binding.component.html and add the following code



<h2>Data Binding</h2>

<!--use this for interpolation : {{}}-->
<h2>Let's Bind the data from source to view using interpolation </h2>

<hr>

<p>{{name}}</p>


<h2>Let's Bind the data from source to view using Property Binding: [] : bind the value with attribute</h2>

<hr>
<a [href]="url">Connect to Google</a>





now goto>app.component.html and copy the selector tag of app-binding



<app-binding></app-binding>


save it and check the output in browser

***************************************************************************
STEP:6 CLASS AND STYLE BINDING
***************************************************************************

----prepare one array of products in bindings.component.ts

products=[{name:"pencil",price:"8.3",available:"05-05-2022",rating:4.8},
            {name:"pen",price:"10",available:"10-05-2022",rating:4.6},
            {name:"eraser",price:"5.5",available:"05-06-2022",rating:5},
            {name:"scale",price:"20",available:"05-08-2022",rating:4},
            {name:"strencil",price:"15",available:"05-09-2022",rating:3.5},
          ]


goto> binding.component.html to print the array using table along with ngDirective

<h3>Print JSON Array</h3>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th> 
            <th>Availability</th>
            <th>Rating</th>
        </tr>
    </thead>
    <tbody>
        <!--ngDirectives-->
        <tr *ngFor="let p of products">
            <td>{{p.name}}</td>
            <td>{{p.price}}</td>
            <td>{{p.available}}</td>
            <td>{{p.rating}}</td>

        </tr>
    </tbody>
</table>


[*Note: to implement bootstrap ia angular app include css and script file from bootstrap official website to index.html file as we do in html page]




step:a class binding

-prepare one class named inStock in binding.component.css



.inStock{
background-color: green;
color: white;
font-size: 15px;
}



goto binding.component.html file and bind the class using


 <td [class.inStock]="true">{{p.name}}</td>


step: b style binding


prepare one number with any name say 'we' in binding.component.ts

we:number=700;

now bind the style in binding.component.html

 <td [style.font-weight]="we">{{p.price}}</td>

save the file and check the out put in browser



**************************************************************************
STEP :7 EVENT BINDING
**************************************************************************

prepare one button and div in html like below






